{"version":3,"sources":["spinner.svg","Download.js","Components/FilterComponents/DateTime.js","Components/FilterComponents/SelectFilter.js","Components/FilterComponents/OrderBy.js","Components/Error.js","Components/FilterComponents/TotalRows.js","Components/CopyButton/index.js","Filter.js","Table.js","TableContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Query","require","Download","dataset","schema","filter","apiUri","copyOfFilter","JSON","parse","stringify","limit","offset","downloadQuery","find","fields","map","item","name","queryString","toString","includes","replace","useState","format","showSpinner","setShowSpinner","downloadData","extension","fetch","method","headers","responseType","body","query","then","response","ok","Error","statusText","blob","fileDownload","Date","toLocaleDateString","catch","error","s","useEffect","downloadButtons","document","getElementsByClassName","button","newButton","cloneNode","addEventListener","value","parentNode","replaceChild","className","src","spinner","alt","onClick","data-testid","DateTime","columnName","setInputStates","index","setCopyDisabled","startDate","setStartDate","endDate","setEndDate","handleDate","date","type","getTimezoneOffset","localDateTime","getTime","ISODateTime","toISOString","prevState","newdata","slice","console","log","logicValue","length","splice","inputValue","onChange","clearIcon","nativeInputAriaLabel","dayAriaLabel","monthAriaLabel","yearAriaLabel","aria-hidden","SelectFilter","inputState","inputStates","logics","setAddRules","handleChange","e","target","schemaType","getFields","filterFields","val","setData","dtype","title","Object","keys","preventDefault","newState","push","OrderBy","orderColumnRef","orderByRef","ref","TotalRows","newFilter","setTotal","total","getTotalRows","QUERY","gql","useQuery","loading","data","aggregate","count","toLocaleString","CopyButton","disabled","datasetQuery","assign","queryToCopy","text","Filter","setFilter","setOffset","setPage","where","copyDisabled","useRef","addRules","startsWith","whereVariables","filterVariables","forEach","logic","input","whereKeys","isFilled","orderColumn","current","orderBy","filterTable","initialFilter","datetime","order_by","resetFilter","Table","pageSize","key","rows","row","field","fieldSize","size","constraints","sizeParts","split","parseInt","undefined","minimumFractionDigits","maximumFractionDigits","parseFloat","columns","Header","accessor","Cell","props","width","getTheadThProps","style","wordWrap","whiteSpace","showPageJump","showPagination","defaultPageSize","showPageSizeOptions","minRows","TableContainer","page","Math","floor","totalPages","App","primary_key","pk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","root","getElementById","getAttribute","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode"],"mappings":"iPAAe,MAA0B,oC,q8JCGzC,IAAMA,GAAK,WAAGC,EAAQ,KAEP,SAASC,EAAT,GAAwD,IAApCC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAAU,WAEpE,IAAMC,GAAY,WAAGC,KAAKC,MAAMD,KAAKE,UAAUL,KAFqB,kBAG7DE,EAAaI,MAHgD,kBAI7DJ,EAAaK,OAEpB,IAAMC,GAAa,WAAG,IAAIb,EAAMG,GAC7BW,KAAKV,EAAOW,OAAOC,KAAI,SAACC,GAAS,6BAAAA,EAAKC,SACtCb,OAAOE,IAENY,GAAW,WAAGN,EAAcO,YAVoC,WAYhED,EAAYE,SAAS,QAAS,IAAD,qBAC/BF,EAAcA,EAAYG,QAAQ,QAAS,SACrC,IAAD,qBACLH,EAAcA,EAAYG,QAAQ,SAAU,SAfsB,mBAkBxCC,mBAAS,QAlB+B,mBAkB7DC,EAlB6D,aAmBvD,YAnBuD,YAoB9BD,oBAAS,IApBqB,mBAoB7DE,EApB6D,KAoBhDC,EApBgD,6BA0BpE,IAAMC,EAAe,SAACC,GAAe,IAAD,mBAClCF,GAAe,GADmB,YAElCG,MAAM,GAAD,OAAIvB,EAAJ,4BAA6B,cAAAsB,IAAS,cAAIJ,KAAU,CACvDM,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,aAAc,OACdC,KAAMzB,KAAKE,UAAU,CACnBwB,MAAM,wCAAD,OACSf,EADT,mDAMNgB,MAAK,SAACC,GACL,GADmB,IAAD,oBACbA,EAASC,GAEZ,MAFiB,IAAD,sBAChBX,GAAe,GADC,YAEV,IAAIY,MAAMF,EAASG,YAE3B,OAJA,cADkB,YAKXH,EAASI,UAEjBL,MAAK,SAACK,GAAU,IAAD,mBACdC,IACED,EADU,UAEPrC,EAFO,aAEI,IAAIuC,MAAOC,qBAFf,aAGR,cAAAf,IAAS,cAAIJ,MAJH,YAOdE,GAAe,MAEhBkB,OAAM,SAACC,GAAU,sBAAAC,EAAA,MAAApB,GAAe,OAoBrC,OA3EoE,YA0DpEqB,qBAAU,WAAO,IAAD,OAEd,IAAMC,GAAe,YAAGC,SAASC,uBAAuB,kBAF1C,gCAGKF,GAHL,yBAGLG,EAHK,QAQNC,GAAS,YAAGD,EAAOE,WAAU,IARvB,wBAYZD,EAAUE,iBAAiB,SAHF,WAAO,IAAD,mBAC7B3B,EAAayB,EAAUG,UAE6B,GAZ1C,YAaZJ,EAAOK,WAAWC,aAAaL,EAAWD,IAV5C,2BAAqC,IAHvB,iCAeb,CAAChC,IAzEgE,YA4ElE,sCACG,cAAAM,IAAW,cACV,qBAAKiC,UAAU,oBAAf,SACE,qBACEC,IAAKC,EACLF,UAAU,2BACVG,IAAI,mBAIV,qBAAKH,UAAU,wBAAf,SACE,yBACEI,QAAS,WAAM,8BAAAnC,KACfoC,cAAY,gBACZL,UAAU,wCAHZ,UAKG,IALH,eAMe,Y,y3KCJRM,MA3Ff,YAMG,EALDC,WAKE,IAJFC,EAIC,EAJDA,eACAC,EAGC,EAHDA,MAEAC,GACC,EAFDrD,OAEC,EADDqD,iBACC,6BACiC7C,sBADjC,mBACM8C,EADN,KACiBC,EADjB,mBAE6B/C,sBAF7B,mBAEMgD,EAFN,KAEeC,EAFf,gBAID,IAAMC,EAAa,SAAUR,EAAYS,EAAMC,GAE7C,GAFoD,IAAD,kBACnDP,GAAgB,GADmC,WAE/CM,EAAM,CAAC,IAAD,UAER,IAAM9D,GAAM,WAAG8D,EAAKE,qBACdC,GAAa,WAAG,IAAInC,KAAKgC,EAAKI,UAAqB,GAATlE,EAAc,MACxDmE,GAAW,WAAGF,EAAcG,eAJ1B,WAMK,UAATL,GAAmB,IAAD,qBACpBL,EAAaI,GADO,YAEpBR,GAAe,SAACe,GAAe,IAAD,OAC5B,IAAMC,GAAO,YAAGD,EAAUE,SAG1B,OAJ4B,YAE5BD,EAAQf,GAAR,WAA6B,GAAK,OAFN,YAG5Be,EAAQf,GAAR,WAA6B,GAAKY,EAHN,YAIrBG,OAEH,IAAD,sBACLV,EAAWE,GADN,YAELR,GAAe,SAACe,GAAe,IAAD,OAC5B,IAAMC,GAAO,YAAGD,EAAUE,SAG1B,OAJ4B,YAE5BD,EAAQf,GAAR,WAA6B,GAAK,MAFN,YAG5Be,EAAQf,GAAR,WAA6B,GAAKY,EAHN,YAIrBG,WAGL,IAAD,sBACQ,UAATP,GAAmB,IAAD,sBACpBL,EAAaI,GADO,YAEpBR,GAAe,SAACe,GAAe,IAAD,OAC5B,IAAMC,GAAO,YAAGD,EAAUE,SAM1B,OAP4B,YAE5BC,QAAQC,IAAIH,GAFgB,YAGxBA,EAAQf,GAAOmB,WAAWC,QAAU,GAAI,IAAD,sBACzCL,EAAQf,GAAOmB,WAAWE,OAAO,EAAG,GADK,YAEzCN,EAAQf,GAAOsB,WAAWD,OAAO,EAAG,IAFtC,cAH4B,YAOrBN,OAEH,IAAD,sBACLV,EAAWE,GADN,YAELR,GAAe,SAACe,GAAe,IAAD,OAC5B,IAAMC,GAAO,YAAGD,EAAUE,SAQ1B,OAT4B,YAEa,IAArCD,EAAQf,GAAOmB,WAAWC,QAAe,IAAD,sBAC1CL,EAAQf,GAAOmB,WAAWE,OAAO,EAAG,GADM,YAE1CN,EAAQf,GAAOsB,WAAWD,OAAO,EAAG,KAC/B,0BAAIN,EAAQf,GAAOmB,WAAWC,OAAS,GAAI,IAAD,sBAC/CL,EAAQf,GAAOmB,WAAWE,OAAO,EAAG,GADW,YAE/CN,EAAQf,GAAOsB,WAAWD,OAAO,EAAG,IAF/B,eALqB,YASrBN,OAMf,OA1DC,YA2DC,qCACE,cAAC,IAAD,CACE3B,MAAOc,EACPqB,SAAU,SAAChB,GAAS,8BAAAD,EAAWR,EAAYS,EAAM,UACjDlD,OAAO,aACPmE,UAAU,IACVC,qBAAqB,uBACrBC,aAAa,YACbC,eAAe,cACfC,cAAc,eAEhB,mBAAGrC,UAAU,yBAAyBsC,cAAY,SAClD,cAAC,IAAD,CACEzC,MAAOgB,EACPmB,SAAU,SAAChB,GAAS,8BAAAD,EAAWR,EAAYS,EAAM,UACjDlD,OAAO,aACPmE,UAAU,IACVC,qBAAqB,qBACrBC,aAAa,UACbC,eAAe,YACfC,cAAc,iB,mpTC8FPE,MAnLf,YASI,IARF/B,EAQC,EARDA,eACAgC,EAOC,EAPDA,WACAC,EAMC,EANDA,YACAhC,EAKC,EALDA,MACApD,EAIC,EAJDA,OACAqF,EAGC,EAHDA,OACAC,EAEC,EAFDA,YACAjC,EACC,EADDA,gBACC,sBACD,IAAMkC,EAAe,SAAUC,GAAI,IAAD,kBAChCnC,GAAgB,GAChB,IAAMlD,GAAI,WAAGqF,EAAEC,OAAOtF,MAChBqC,GAAK,WAAGgD,EAAEC,OAAOjD,OAHS,WAIhCW,GAAe,SAACe,GAAe,IAAD,OAC5B,IAAMC,GAAO,WAAGD,EAAUE,SAS1B,OAV4B,WAE5BD,EAAQf,GAAOjD,GAAM,GAAKqC,EAFE,WAI1B,cAAS,eAATrC,IAAA,cACsB,aAAtBuF,EAAWlD,MADX,cAEsB,SAAtBkD,EAAWlD,KACV,IAAD,qBACA2B,EAAQf,GAAR,WAA6B,GAAK,OALpC,cAH4B,WAUrBe,MAfV,YAmBD,IAAMwB,EAAY,SAAUvC,GAAQ,IAAD,OACjC,IAAIwC,GAAY,YAAG,MAYnB,OAbiC,YAGnB,IAAVxC,GAAc,IAAD,sBACfwC,EAAe5F,EAAOV,QAAO,SAACuG,GAC5B,OADqC,IAAD,mBAC7B,cAAa,aAAbA,EAAIjC,OAAJ,cAAwC,SAAbiC,EAAIjC,WAElC,IAAD,sBACLgC,EAAe5F,EAAOV,QAAO,SAACuG,GAC5B,OADqC,IAAD,mBAC7B,cAAa,aAAbA,EAAIjC,OAAJ,cAAwC,SAAbiC,EAAIjC,UATT,YAa1BgC,GAhCR,wBA8CD5D,qBAAU,WACR,GADe,IAAD,mBACV2D,EAAUvC,GAAOoB,OAAQ,CAAC,IAAD,UAC3B,IAAMhC,GAAK,YAAGmD,EAAUvC,GAAO,GAAGjD,MADP,YAZf,SAAUqC,GAAQ,IAAD,mBAC/BW,GAAe,SAACe,GAAe,IAAD,OAC5B,IAAMC,GAAO,YAAGD,EAAUE,SAK1B,OAN4B,YAE5BD,EAAQf,GAAR,WAA6B,GAAKZ,EAFN,YAGxB,cAAsB,aAAtBkD,EAAWlD,KAAX,cAA0D,SAAtBkD,EAAWlD,KAAoB,IAAD,sBACpE2B,EAAQf,GAAR,WAA6B,GAAK,OADpC,cAH4B,YAMrBe,KAOP2B,CAAQtD,QAFV,gBAIC,CAAC2C,IAnDH,oCAkFD,IAAMO,EAAa,SAAUxC,GAC3B,GADwC,IAAD,oBACnCA,EAAY,CAAC,IAAD,UACd,IAAM6C,GAAK,YAAG/F,EAAOV,QAAO,SAACuG,GAAQ,+BAAAA,EAAI1F,OAAS+C,KAAY,IAC9D,OAFc,YAEP6C,EAAK,KAFd,eAMF,OAzFC,YA0FC,sBAAKpD,UAAU,OAAOK,cAAY,kBAAlC,UACE,wBACEL,UAAU,+BACVgC,SAAUY,EACV/C,MAAO2C,EAAWjC,WAAW,GAC7B/C,KAAK,aACL6C,cAAY,QALd,SAOG2C,EAAUvC,GAAOnD,KAAI,SAACuC,EAAOY,GAC5B,OADuC,IAAD,oBAEpC,wBAAQZ,MAAOA,EAAMrC,KAArB,UACG,eAAAqC,EAAMwD,QAAN,eAAexD,EAAMrC,QADQiD,SAMrC,eAAyC,aAAzCsC,EAAWP,EAAWjC,WAAW,MAAjC,eACwC,SAAzCwC,EAAWP,EAAWjC,WAAW,MADhC,eAEC,KAFD,eAIC,wBACEP,UAAU,+BACVgC,SAAUY,EACV/C,MAAO2C,EAAWZ,WAAW,GAC7BpE,KAAK,aACL6C,cAAY,QALd,SAOGiD,OAAOC,KAAKb,GAAQpF,KAAI,SAACuC,EAAOY,GAC/B,OAD0C,IAAD,oBAEvC,wBAAQZ,MAAO6C,EAAO7C,GAAtB,SACGA,GADgCY,WAQ1C,eAAyC,aAAzCsC,EAAWP,EAAWjC,WAAW,MAAjC,eACwC,SAAzCwC,EAAWP,EAAWjC,WAAW,MADhC,eAEC,cAAC,EAAD,CACEA,WAAYiC,EAAWjC,WAAW,GAClCC,eAAgBA,EAChBC,MAAOA,EACPpD,OAAQA,EACRqD,gBAAiBA,MAPpB,eAUC,uBACEO,KAAK,OACLjB,UAAU,+BACVgC,SAAUY,EACV/C,MAAO2C,EAAWT,WAClBvE,KAAK,aACL6C,cAAY,kBAGL,IAAVI,GAAA,eACC,KADD,eAGC,qCACE,wBACET,UAAU,2DACVI,QAzFK,SAAUyC,GAAI,IAAD,oBAC1BA,EAAEW,iBADwB,YAEU,IAAhCf,EAAYhB,MAAM,GAAGI,QAAe,IAAD,sBACrCrB,GAAe,SAACe,GAAe,IAAD,QAC5B,IAAMkC,GAAQ,YAAGlC,EAAUE,SAE3B,OAH4B,YAE5BgC,EAAS3B,OAAOrB,EAAO,GAFK,YAGrBgD,KAJ4B,YAOrCd,GAAY,KACN,IAAD,sBACLnC,GAAe,SAACe,GAAe,IAAD,QAC5B,IAAMkC,GAAQ,YAAGlC,EAAUE,SAE3B,OAH4B,YAE5BgC,EAAS3B,OAAOrB,EAAO,GAFK,YAGrBgD,OA4EHpD,cAAY,SAHd,eAOA,wBACEL,UAAU,mDACVI,QA1GE,SAAUyC,GAAI,IAAD,mBACvBA,EAAEW,iBADqB,YAGvBhD,GAAe,SAACe,GAAe,IAAD,QAC5B,IAAMkC,GAAQ,YAAGlC,EAAUE,SAE3B,OAH4B,YAE5BgC,EAASC,KAAK,CAAEnD,WAAY,CAAC,IAAKqB,WAAY,GAAIG,WAAY,KAFlC,YAGrB0B,MAqGDpD,cAAY,MAHd,uB,4oCC/IKsD,I,EAAAA,EAxBf,YAA0D,IAAvCC,EAAsC,EAAtCA,eAAgBC,EAAsB,EAAtBA,WAAYxG,EAAU,EAAVA,OAC7C,OADuD,sBAErD,gCACE,wBACEyG,IAAKF,EACL5D,UAAU,+BACVK,cAAY,WAHd,SAKGhD,EAAOC,KAAI,SAACuC,EAAOY,GAClB,OAD6B,IAAD,kBAE1B,wBAAQZ,MAAOA,EAAMrC,KAArB,UACG,cAAAqC,EAAMwD,QAAN,cAAexD,EAAMrC,QADQiD,QAMtC,yBAAQT,UAAU,0BAA0B8D,IAAKD,EAAYxD,cAAY,WAAzE,UACE,wBAAQR,MAAM,OAAd,wBACA,wBAAQA,MAAM,MAAd,8B,+sBClBO,SAASjB,EAAT,GAA2B,IAAVO,EAAS,EAATA,MAC9B,OADuC,sBAErC,qBAAKa,UAAU,8EAAf,SACE,4BAAIb,EAAMzB,e,mlECDhB,IAAMpB,GAAK,WAAGC,EAAQ,KAoCPwH,MAlCf,YAA6D,IAAxCC,EAAuC,EAAvCA,UAAWvH,EAA4B,EAA5BA,QAASwH,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAAS,WAC1D,IAAMC,GAAY,WAAG,IAAI7H,EAAJ,UAAaG,EAAb,eAClBE,OAAOqH,GACP5G,KAAK,IAAId,EAAM,aAAac,KAAK,WAE9BgH,GAAK,WAAGC,cAAH,oEAELF,IAPoD,cAUzBG,mBAASF,IAAlCG,EAVkD,EAUlDA,QAASpF,EAVyC,EAUzCA,MAAOqF,EAVkC,EAUlCA,KAExB,OAZ0D,WAYtDD,GACF,yBAAO,qBAAKtE,IAAKC,EAASF,UAAU,UAAUG,IAAI,iBADpD,cAZ0D,WActDhB,GAAQ,IAAD,qBACF,cAAC,EAAD,CAAOA,MAAOA,MADvB,cAd0D,WAkBtDqF,GAAO,IAAD,qBACRP,EAASO,EAAK,GAAD,OAAI/H,EAAJ,eAAyBgI,UAAUC,QADlD,cAlB0D,YAuBxD,qBAAKrE,cAAY,MAAML,UAAU,6BAAjC,SACE,oBAAIA,UAAU,6CAAd,SACE,sBAAKA,UAAU,2DAAf,UACE,oBAAIA,UAAU,6CAAd,2BACA,oBAAIA,UAAU,4CAAd,UAA2D,cAAAkE,IAAK,cAAIA,EAAMS,+B,iwEC/BpF,IAAMrI,GAAK,WAAGC,EAAQ,KAEP,SAASqI,EAAT,GAA4D,IAAtCnI,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,OAAQkI,EAAY,EAAZA,SAAY,WACxE,IAAMC,GAAY,WAAG,IAAIxI,EAAMG,GAC5BW,KAAKV,EAAOW,OAAOC,KAAI,SAACC,GAAS,6BAAAA,EAAKC,SACtCb,OAAO2G,OAAOyB,OAAOpI,EAAQ,CAAEM,MAAO,QAMrCQ,GAAW,WAAGqH,EAAapH,YATyC,WAWpED,EAAYE,SAAS,QAAS,IAAD,qBAC/BF,EAAcA,EAAYG,QAAQ,QAAS,SACrC,IAAD,qBACLH,EAAcA,EAAYG,QAAQ,SAAU,SAG9C,IAAMoH,GAAW,kDAEXvH,EAFW,gBAMjB,OAvBwE,WAwBtE,cAAC,kBAAD,CACEwH,KAAMD,EACN3B,MAAOwB,GAAQ,cAAG,4BAAH,cAA+B,IAC9CA,SAAUA,EAHZ,SAKE,wBAAQ5D,KAAK,SAASjB,UAAU,6LAAhC,0B,q2QC4KSkF,MArMf,YASI,IARFzI,EAQC,EARDA,QACAC,EAOC,EAPDA,OACAC,EAMC,EANDA,OACAwI,EAKC,EALDA,UACAjB,EAIC,EAJDA,MACAD,EAGC,EAHDA,SACAmB,EAEC,EAFDA,UACAC,EACC,EADDA,QACC,WACD,IAAMrB,GAAS,WAAG,IADjB,WAGG,cAAArH,IAAM,cAAIA,EAAO2I,QAAO,yBAAAhC,OAAOyB,OAAOf,EAAW,CAAEsB,MAAO3I,EAAO2I,SAArE,cAHC,kBAKuCzH,oBAAS,IALhD,mBAKM0H,EALN,KAKoB7E,EALpB,mBAOqC7C,mBAAS,CAC7C,CAAE0C,WAAY,CAAC,IAAKqB,WAAY,GAAIG,WAAY,OARjD,mBAOMU,EAPN,KAOmBjC,EAPnB,KAUKoD,GAAc,WAAG4B,oBACjB3B,GAAU,WAAG2B,oBAXlB,cAY+B3H,oBAAS,IAZxC,mBAYM4H,EAZN,KAYgB9C,EAZhB,KAcKD,GAAM,WAAG,CACb,KAAM,MACN,IAAK,MACL,IAAK,MACL,KAAM,OACN,KAAM,OACN,KAAM,SA0ER,OA9FC,+CA+FC,sBAAK1C,UAAU,oBAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,oBACf,cAAC,EAAD,CACEgE,UAAWA,EACXvH,QAASA,EACTwH,SAAUA,EACVC,MAAOA,OAGX,+BACE,sBAAK7D,cAAY,aAAjB,WACG,eAAA3D,EAAOW,OAAO,GAAG4D,KAAKyE,WAAW,UAAjC,eACC,qBAAK1F,UAAU,iBAAf,SACE,cAAC,EAAD,CACEQ,eAAgBA,EAChBnD,OAAQX,EAAOW,OACfqF,OAAQA,EACRF,WAAYC,EAAY,GACxBA,YAAaA,EACbhC,MAAO,EACPkC,YAAaA,EACbjC,gBAAiBA,QAKvB,qBAAKV,UAAU,UAAf,SACGyF,GAAQ,eACPhD,EAAYhB,MAAM,GAAGnE,KAAI,SAACuC,EAAOY,GAC/B,OAD0C,IAAD,mBAEvC,cAAC,EAAD,CACED,eAAgBA,EAChBnD,OAAQX,EAAOW,OACfqF,OAAQA,EACRF,WAAY3C,EACZ4C,YAAaA,EACbhC,MAAOA,EAAQ,EAEfkC,YAAaA,EACbjC,gBAAiBA,GAFZD,EAAQ,QAVZ,eAiBP,wBACET,UAAU,oDACVI,QAAS,WAAM,8BAzDI,IAAD,mBAC9BI,GAAe,SAACe,GAAe,IAAD,OAC5B,IAAMkC,GAAQ,YAAGlC,EAAUE,SAE3B,OAH4B,YAE5BgC,EAASC,KAAK,CAAEnD,WAAY,CAAC,IAAKqB,WAAY,CAAC,OAAQG,WAAY,KAFvC,YAGrB0B,KAJqB,iBAM9Bd,GAAY,IAoDAtC,cAAY,QAHd,gCAWR,sBAAKL,UAAU,gCAAf,UACE,cAAC,EAAD,CACE4D,eAAgBA,EAChBC,WAAYA,EACZxG,OAAQX,EAAOW,SAEjB,uBAAM2C,UAAU,gDAAhB,UACE,wBACCiB,KAAK,SACJb,QAAS,WAAO,IAAD,oBAzIL,WAAa,IAAD,mBAC9BM,GAAgB,GAChB,IAAMiF,GAAc,YAAG,IACjBC,GAAe,YAAG,IAHM,YAI9BnD,EAAYoD,SAAQ,SAAChG,EAAOY,GAC1B,GADqC,IAAD,mBAChCZ,EAAMkC,WAAW,GAAK,IAAD,sBAEvB4D,EAAe9F,EAAMU,WAAW,IAAM,GAFf,YAGvBV,EAAM+B,WAAWiE,SAAQ,SAAC3C,EAAKzC,GAAW,IAAD,OACvC,IAAMqF,GAAK,YAAGjG,EAAM+B,WAAWnB,IACzBsF,GAAK,YAAGlG,EAAMkC,WAAWtB,IAFQ,YAGvCkF,EAAe9F,EAAMU,WAAW,IAAIuF,GAASC,UAE1C,6BAAG,cAA4B,IAA5BlG,EAAMkC,WAAWF,SAAjB,cAAiChC,EAAMkC,WAAW,IAAI,CAAC,IAAD,sBAG9D4D,EAAe9F,EAAMU,WAAW,IAAM,GACtC,IAAMuF,GAAK,YAAGjG,EAAM+B,WAAW,IACzBmE,GAAK,YAAGlG,EAAMkC,WAAW,IAL+B,YAM9D4D,EAAe9F,EAAMU,WAAW,IAAIuF,GAASC,OANxC,iBAbqB,YAuB9BH,EAAe,MAAYD,EAE3B,IAAMK,GAAS,YAAG1C,OAAOC,KAAKoC,IACxB9D,GAAM,YAAGmE,EAAUnE,QACnBoE,GAAQ,YAAc,IAAXpE,GAAA,cAAemE,EAAU,GAAGnE,SAA5B,eAAqC,IA3BxB,YA6B1BoE,GAAW,IAAD,sBACZL,EAAe,MAAYD,GAD7B,cAIA,IAAMO,GAAW,YAAGtC,EAAeuC,QAAQtG,OACrCuG,GAAO,YAAGvC,EAAWsC,QAAQtG,OAlCL,YAmC9B+F,EAAe,SAAf,eAAiCM,EAAcE,GAnCjB,YAoC9BR,EAAe,MAAY,IApCG,YAqC9BT,EAAUS,GAqGAS,IAEFrG,UAAU,uLALZ,oBASA,wBACEiB,KAAK,SACLb,QAAS,WAAO,IAAD,oBA1GL,WAAa,IAAD,OAI9B,IAAIkG,GAAa,YAAG,IACdC,GAAQ,YAAG7J,EAAOW,OAAOV,QAAO,SAACuG,GACrC,OAD8C,IAAD,mBACtC,cAAa,aAAbA,EAAIjC,OAAJ,cAAwC,SAAbiC,EAAIjC,UANV,YAQ1BsF,EAAS1E,OAAS,GAAI,IAAD,sBACvByE,EAAgB,CAAEE,SAAS,eAAID,EAAS,GAAG/I,KAAO,UADpD,cAR8B,YAY1B,eAAAiF,EAAY,GAAGV,WAAWF,SAA1B,eAAoCY,EAAYZ,OAAS,IAAI,IAAD,sBAC9DrB,EAAe,CAAC,CAAED,WAAY,CAAC,IAAKqB,WAAY,GAAIG,WAAY,MADF,YAE9DqD,EAAU,GAFoD,YAG9DC,EAAQ,GAHsD,YAI9D1C,GAAY,GAJkD,YAK9DwC,EAAUmB,GALoD,YAM9D5F,GAAgB,IANlB,cA+FU+F,IAEFzG,UAAU,mLALZ,mBASA,cAAC4E,EAAD,CACEnI,QAASA,EACTC,OAAQA,EACRC,OAAQA,EACRkI,SAAUU,c,wwOCjMtB,I,EAkGemB,EAlGD,SAAC,GAAsC,IAApClC,EAAmC,EAAnCA,KAAe9H,GAAoB,EAA7BD,QAA6B,EAApBC,QAAoB,EAAZwH,MAAY,WAClD,IAAMyC,GAAQ,WAAG,KADiC,WAGlD,IAAM3D,EAAY,WAChB,GADuB,IAAD,kBAClB,cAAAtG,IAAM,cAAIA,EAAOW,QACnB,OAD4B,IAAD,qBACpBX,EAAOW,OADhB,cAGA,IAAMA,GAAM,WAAG,IACf,IAAK,IAAIuJ,KALa,WAKNpC,EAAK,GAAK,IAAD,OACvBnH,EAAOqG,KAAK,CACVlG,KAAMoJ,IAGV,OAVsB,WAUfvJ,GAbyC,WAgBlDmH,EAAOA,EAAKlH,KAAI,SAACuJ,GAAU,IAAD,OACxB,IAAMC,GAAG,2BAAQD,IAIXxJ,GAAM,YAAG2F,KAwCf,OA7CwB,YAMxB3F,EAAOwI,SAAQ,SAACkB,GAAW,IAAD,OACxB,IAAMC,GAAS,YACb,cAAAD,EAAME,OAAS,cAAAF,EAAMG,cAAN,cAAqBH,EAAMG,YAAYD,QACxD,GAHwB,YAGpB,cAAAD,IAAS,cAAwB,OAApBF,EAAIC,EAAMvJ,OAAgB,CAAC,IAAD,UACzC,IAAM2J,GAAS,YAAGH,EAAUtJ,WAAW0J,MAAM,MADJ,YAIrC,cAAAL,EAAMvJ,KAAKG,SAAS,SAApB,cAA6C,aAAfoJ,EAAM9F,OAAsB,IAAD,sBAC3D6F,EAAIC,EAAMvJ,MAAQsJ,EAAIC,EAAMvJ,MAAMI,QAChC,4DACA,YAEG,0BAAI,cAAAmJ,EAAMvJ,KAAKG,SAAS,QAApB,cAA4C,aAAfoJ,EAAM9F,OAAsB,IAAD,sBACjE6F,EAAIC,EAAMvJ,MAAQsJ,EAAIC,EAAMvJ,MAAMI,QAChC,4CACA,WAEG,0BAAIuJ,EAAU,IAAK,IAAD,sBACvBA,EAAU,GAAKE,SAASF,EAAU,IADX,YAEvBL,EAAIC,EAAMvJ,MAAQsJ,EAAIC,EAAMvJ,MAAMmH,oBAAe2C,EAAW,CAC1DC,sBAAuBJ,EAAU,GACjCK,sBAAuBL,EAAU,OAE7B,IAAD,sBACLA,EAAU,GAAKE,SAASF,EAAU,IAD7B,YAELL,EAAIC,EAAMvJ,OACR,eAAAsJ,EAAIC,EAAMvJ,QAAV,eACAsJ,EAAIC,EAAMvJ,MAAME,WAAW+D,MAAM,EAAG0F,EAAU,MAJ3C,YAMc,YAAfJ,EAAM9F,MAAqB,IAAD,uBAC5B6F,EAAIC,EAAMvJ,MAAQ6J,SAASP,EAAIC,EAAMvJ,SAChC,2BAAmB,WAAfuJ,EAAM9F,MAAoB,IAAD,uBAClC6F,EAAIC,EAAMvJ,MAAQiK,WAAWX,EAAIC,EAAMvJ,QADlC,wBA5BX,cAHwB,YAoCxBsJ,EAAIC,EAAMvJ,OAAQ,eAAAsJ,EAAIC,EAAMvJ,QAAV,eAAmBsJ,EAAIC,EAAMvJ,MAAMmH,sBA1C/B,YA6CjBmC,KAGT,IAAMY,GAAO,YAAG1E,IAAY1F,KAAI,SAACyJ,EAAOtG,GACtC,OADiD,IAAD,mBACzC,CACLkH,QAAQ,eAAAZ,EAAM1D,QAAN,eAAe0D,EAAMvJ,OAC7BoK,SAAUb,EAAMvJ,KAChBqK,KAAM,SAACC,GACL,mDAAK9H,WAAW,eAAA+G,EAAM9F,OAAN,eAAc,KAA9B,SACE,+BAAO6G,EAAMjI,WAGjBkI,OACE,eAAU,IAAVtH,IAAA,eAAe,SAAuBuC,IAAYnB,OAAS,MAA3D,eACI,UADJ,qBAMN,OAhFkD,YAiFhD,qBAAKxB,cAAY,aAAjB,SACE,cAAC,IAAD,CACEmE,KAAMA,EACNkD,QAASA,EACTM,gBAAiB,WACf,OADsB,IAAD,mBACd,CAAEC,MAAO,CAAEC,SAAU,aAAcC,WAAY,aAExDC,cAAc,EACdC,gBAAgB,EAChBC,gBAAiB3B,EACjB4B,qBAAqB,EACrBC,QAAS,Q,kxGC3FjB,IAAMlM,GAAK,WAAGC,EAAQ,KAsGPkM,MApGf,YASI,IARFhM,EAQC,EARDA,QACAC,EAOC,EAPDA,OACAC,EAMC,EANDA,OACAuH,EAKC,EALDA,MACAhH,EAIC,EAJDA,OACAkI,EAGC,EAHDA,UACAC,EAEC,EAFDA,QACAqD,EACC,EADDA,KACC,WACD,IAAM5D,GAAY,WAAG,IAAIxI,EAAMG,GAC5BW,KAAKV,EAAOW,OAAOC,KAAI,SAACC,GAAS,6BAAAA,EAAKC,SACtCb,OAAO2G,OAAOyB,OAAOpI,EAAQ,CAAEM,MAAO,IAAKC,aAM1CO,GAAW,WAAGqH,EAAapH,YAT9B,WAWGD,EAAYE,SAAS,UAAW,IAAD,qBACjCF,EAAcA,EAAYG,QAAQ,SAAU,SACtC,IAAD,qBACLH,EAAcA,EAAYG,QAAQ,UAAW,SAG/C,IAAMwG,GAAK,WAAGC,cAAH,oEAEL5G,IAnBL,cAuBgC6G,mBAASF,IAAlCG,EAvBP,EAuBOA,QAASpF,EAvBhB,EAuBgBA,MAAOqF,EAvBvB,EAuBuBA,KAExB,OAzBC,WAyBGD,GACF,0BAAO,qBAAKtE,IAAKC,EAASF,UAAU,UAAUG,IAAI,iBADpD,cAzBC,YA4BGhB,GAAQ,IAAD,sBACF,cAAC,EAAD,CAAOA,MAAOA,MADvB,cA5BC,YAiCC,gCACE,qBAAKa,UAAU,gCAAf,SACE,cAAC,EAAD,CACEwE,KAAMA,EAAK,GAAD,OAAI/H,IACdC,OAAQA,EACRD,QAASA,EACTyH,MAAOA,EACPwE,KAAMA,MAGV,sBAAK1I,UAAU,2BAAf,UACE,wBACEA,UAAU,eACVI,QAAS,WAAO,IAAD,mBACbiF,EAAQ,GADK,YAEbD,EAAU,IAEZP,SAAmB,IAAT6D,EANZ,mBAUA,wBACE1I,UAAU,cACVI,QAAS,WAAO,IAAD,mBACbiF,EAAQqD,EAAO,GADF,YAEbtD,EAAuB,KAAZsD,EAAO,KAEpB7D,SAAmB,IAAT6D,EANZ,sBAUA,qBAAK1I,UAAU,cAAf,SAA8B0I,EAAO,IACrC,wBACE1I,UAAU,cACVI,QAAS,WAAO,IAAD,mBACbiF,EAAQqD,EAAO,GADF,YAEbtD,EAAuB,KAAZsD,EAAO,KAEpB7D,SAAU6D,GAAQC,KAAKC,MAAM1E,EAAQ,KANvC,kBAUA,wBACElE,UAAU,cACVI,QAAS,WAAO,IAAD,OACb,IAAMyI,GAAU,YAAGF,KAAKC,MAAM1E,EAAQ,MADzB,YAEbmB,EAAQwD,GAFK,YAGbzD,EAAuB,IAAbyD,IAEZhE,SAAU6D,GAAQC,KAAKC,MAAM1E,EAAQ,KAPvC,2B,quEC7BO4E,MAxDf,YAA2C,IAA5BrM,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQE,EAAU,EAAVA,OAAU,WAExC,IAAI0J,GAAa,WAAG,IACpB,GAHwC,WAGpC5J,EAAOqM,YAAc,IAAD,qBACtBzC,EAAgB,CAAEE,SAAU9J,EAAOqM,YAAYzL,KAAI,SAAA0L,GACjD,OADwD,IAAD,kBAChD,eAAGA,EAAM,gBAEb,CAAC,IAAD,UAEL,IAAMzC,GAAQ,WAAG7J,EAAOW,OAAOV,QAAO,SAACuG,GACrC,OAD8C,IAAD,kBACtC,cAAa,aAAbA,EAAIjC,OAAJ,cAAwC,SAAbiC,EAAIjC,UAHnC,WAKDsF,EAAS1E,OAAS,GAAI,IAAD,qBACvByE,EAAgB,CAAEE,SAAS,eAAID,EAAS,GAAG/I,KAAO,UADpD,cAZsC,kBAiBZK,mBAASyI,IAjBG,mBAiBjC3J,EAjBiC,KAiBzBwI,EAjByB,mBAkBdtH,mBAAS,IAlBK,mBAkBjCqG,EAlBiC,KAkB1BD,EAlB0B,oBAmBZpG,mBAAS,IAnBG,mBAmBjCX,EAnBiC,KAmBzBkI,EAnByB,oBAoBhBvH,mBAAS,IApBO,mBAoBjC6K,EApBiC,KAoB3BrD,EApB2B,KAsBxC,OAtBwC,YAuBtC,sBAAKrF,UAAU,qBAAf,UACE,mBAAGK,cAAY,gBACf,cAAC7D,EAAD,CACEC,QAASA,EACTC,OAAQA,EACRC,OAAQA,EACRC,OAAQA,IAEV,cAAC,EAAD,CACEH,QAASA,EACTC,OAAQA,EACRC,OAAQA,EACRwI,UAAWA,EACXjB,MAAOA,EACPD,SAAUA,EACVmB,UAAWA,EACXC,QAASA,IAEX,cAAC,EAAD,CACE5I,QAASA,EACTC,OAAQA,EACRC,OAAQA,EACRuH,MAAOA,EACPhH,OAAQA,EACRkI,UAAWA,EACXC,QAASA,EACTqD,KAAMA,EACNzE,SAAUA,Q,+mDCxDlB,IAcegF,EAdS,SAACC,GAAiB,IAAD,kBACnC,cAAAA,IAAW,cAAIA,aAAuBC,WAAW,IAAD,qBAClD,8BAAqB1K,MACnB,YAAkD,IAA/C2K,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAAc,sBAC/CJ,EAAOF,GADwC,WAE/CG,EAAOH,GAFwC,WAG/CI,EAAOJ,GAHwC,WAI/CK,EAAOL,GAJwC,WAK/CM,EAAQN,OAPd,e,2wBCKF,IAAMO,GAAI,WAAGlK,SAASmK,eAAe,SAC/B9M,IAAM,WAAG6M,EAAKE,aAAa,aAE3BC,IAAM,WAAG,IAAIC,eAAa,CAC9BC,IAAKlN,GAAS,UACdmN,MAAO,IAAIC,mB,WAGbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,iBAAD,CAAgBP,OAAQA,GAAxB,SACE,cAAC,EAAD,CACEnN,QAASgN,EAAKE,aAAa,gBAC3BjN,OAAQI,KAAKC,MAAM0M,EAAKE,aAAa,gBACrC/M,OAAQA,SAId6M,G,WAMFR,M","file":"static/js/main.b8f73348.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/spinner.e2fe8d7a.svg\";","import React, { useState, useEffect } from 'react'\nimport fileDownload from 'js-file-download'\nimport spinner from './spinner.svg'\nconst Query = require('graphql-query-builder')\n\nexport default function Download({ dataset, schema, filter, apiUri }) {\n  // Remove offset and limit from filter:\n  const copyOfFilter = JSON.parse(JSON.stringify(filter))\n  delete copyOfFilter.limit\n  delete copyOfFilter.offset\n\n  const downloadQuery = new Query(dataset)\n    .find(schema.fields.map((item) => item.name))\n    .filter(copyOfFilter)\n\n  let queryString = downloadQuery.toString()\n\n  if (queryString.includes('asc')) {\n    queryString = queryString.replace('\"asc\"', 'asc')\n  } else {\n    queryString = queryString.replace('\"desc\"', 'desc')\n  }\n\n  const [format, setFormat] = useState('csv')\n  const options = ['json', 'csv', 'xlsx']\n  const [showSpinner, setShowSpinner] = useState(false)\n\n  const handleChange = (event) => {\n    setFormat(event.target.value)\n  }\n\n  const downloadData = (extension) => {\n    setShowSpinner(true)\n    fetch(`${apiUri}download?format=${extension || format}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      responseType: 'blob',\n      body: JSON.stringify({\n        query: `query Dataset {\n                    ${queryString}\n                    }\n                  `,\n      }),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          setShowSpinner(false)\n          throw new Error(response.statusText)\n        }\n        return response.blob()\n      })\n      .then((blob) => {\n        fileDownload(\n          blob,\n          `${dataset}_${new Date().toLocaleDateString()}.${\n            extension || format\n          }`\n        )\n        setShowSpinner(false)\n      })\n      .catch((error) => setShowSpinner(false))\n  }\n\n  useEffect(() => {\n    // Add event listener to Download buttons outside of React app\n    const downloadButtons = document.getElementsByClassName('download-data')\n    for (let button of downloadButtons) {\n      // When query string is changed, we need to re-attach click event listner\n      // to the download buttons. We also need to remove all old event listners.\n      // Cloning and replacing the button is one of the options of doing so and\n      // it is efficient enough as the element doesn't have children.\n      const newButton = button.cloneNode(true)\n      const downloadFunction = () => {\n        downloadData(newButton.value)\n      }\n      newButton.addEventListener('click', downloadFunction, true)\n      button.parentNode.replaceChild(newButton, button)\n    }\n  }, [queryString])\n\n  return (\n    <>\n      {showSpinner && (\n        <div className=\"spinner-container\">\n          <img\n            src={spinner}\n            className=\"spinner spinner-download\"\n            alt=\"Loading...\"\n          />\n        </div>\n      )}\n      <div className=\"data-download-default\">\n        <button\n          onClick={() => downloadData()}\n          data-testid=\"download-data\"\n          className=\"border border-black rounded py-1 px-2\"\n        >\n          {' '}\n          Download CSV{' '}\n        </button>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport DatePicker from 'react-date-picker'\n\nfunction DateTime({\n  columnName,\n  setInputStates,\n  index,\n  fields,\n  setCopyDisabled,\n}) {\n  const [startDate, setStartDate] = useState()\n  const [endDate, setEndDate] = useState()\n\n  const handleDate = function (columnName, date, type) {\n    setCopyDisabled(true)\n    if (date) {\n      // Convert it into GMT considering offset\n      const offset = date.getTimezoneOffset()\n      const localDateTime = new Date(date.getTime() - offset * 60 * 1000)\n      const ISODateTime = localDateTime.toISOString()\n\n      if (type === 'type1') {\n        setStartDate(date)\n        setInputStates((prevState) => {\n          const newdata = prevState.slice()\n          newdata[index]['logicValue'][0] = '_gte'\n          newdata[index]['inputValue'][0] = ISODateTime\n          return newdata\n        })\n      } else {\n        setEndDate(date)\n        setInputStates((prevState) => {\n          const newdata = prevState.slice()\n          newdata[index]['logicValue'][1] = '_lt'\n          newdata[index]['inputValue'][1] = ISODateTime\n          return newdata\n        })\n      }\n    } else {\n      if (type === 'type1') {\n        setStartDate(date)\n        setInputStates((prevState) => {\n          const newdata = prevState.slice()\n          console.log(newdata)\n          if (newdata[index].logicValue.length >= 1) {\n            newdata[index].logicValue.splice(0, 1)\n            newdata[index].inputValue.splice(0, 1)\n          }\n          return newdata\n        })\n      } else {\n        setEndDate(date)\n        setInputStates((prevState) => {\n          const newdata = prevState.slice()\n          if (newdata[index].logicValue.length === 1) {\n            newdata[index].logicValue.splice(0, 1)\n            newdata[index].inputValue.splice(0, 1)\n          } else if (newdata[index].logicValue.length > 1) {\n            newdata[index].logicValue.splice(1, 1)\n            newdata[index].inputValue.splice(1, 1)\n          }\n          return newdata\n        })\n      }\n    }\n  }\n\n  return (\n    <>\n      <DatePicker\n        value={startDate}\n        onChange={(date) => handleDate(columnName, date, 'type1')}\n        format=\"yyyy-MM-dd\"\n        clearIcon=\"X\"\n        nativeInputAriaLabel=\"Start date input box\"\n        dayAriaLabel=\"Start day\"\n        monthAriaLabel=\"Start month\"\n        yearAriaLabel=\"Start year\"\n      />\n      <i className=\"fa fa-long-arrow-right\" aria-hidden=\"true\"></i>\n      <DatePicker\n        value={endDate}\n        onChange={(date) => handleDate(columnName, date, 'type2')}\n        format=\"yyyy-MM-dd\"\n        clearIcon=\"X\"\n        nativeInputAriaLabel=\"End date input box\"\n        dayAriaLabel=\"End day\"\n        monthAriaLabel=\"End month\"\n        yearAriaLabel=\"End year\"\n      />\n    </>\n  )\n}\n\nexport default DateTime\n","import React, { useEffect } from 'react'\nimport DateTime from './DateTime'\n\nfunction SelectFilter({\n  setInputStates,\n  inputState,\n  inputStates,\n  index,\n  fields,\n  logics,\n  setAddRules,\n  setCopyDisabled,\n}) {\n  const handleChange = function (e) {\n    setCopyDisabled(true)\n    const name = e.target.name\n    const value = e.target.value\n    setInputStates((prevState) => {\n      const newdata = prevState.slice()\n      newdata[index][name][0] = value\n      if (\n        name === 'columnName' &&\n        schemaType(value) !== 'datetime' &&\n        schemaType(value) !== 'date'\n      ) {\n        newdata[index]['logicValue'][0] = '_eq'\n      }\n      return newdata\n    })\n  }\n\n  const getFields = function (index) {\n    let filterFields = null\n\n    if (index === 0) {\n      filterFields = fields.filter((val) => {\n        return val.type === 'datetime' || val.type === 'date'\n      })\n    } else {\n      filterFields = fields.filter((val) => {\n        return val.type !== 'datetime' && val.type !== 'date'\n      })\n    }\n\n    return filterFields\n  }\n\n  const setData = function (value) {\n    setInputStates((prevState) => {\n      const newdata = prevState.slice()\n      newdata[index]['columnName'][0] = value\n      if (schemaType(value) !== 'datetime' && schemaType(value) !== 'date') {\n        newdata[index]['logicValue'][0] = '_eq'\n      }\n      return newdata\n    })\n  }\n\n  useEffect(() => {\n    if (getFields(index).length) {\n      const value = getFields(index)[0].name\n      setData(value)\n    }\n  }, [inputState])\n\n  const add = function (e) {\n    e.preventDefault()\n\n    setInputStates((prevState) => {\n      const newState = prevState.slice()\n      newState.push({ columnName: [''], logicValue: [], inputValue: [] })\n      return newState\n    })\n  }\n\n  const remove = function (e) {\n    e.preventDefault()\n    if (inputStates.slice(1).length === 1) {\n      setInputStates((prevState) => {\n        const newState = prevState.slice()\n        newState.splice(index, 1)\n        return newState\n      })\n\n      setAddRules(false)\n    } else {\n      setInputStates((prevState) => {\n        const newState = prevState.slice()\n        newState.splice(index, 1)\n        return newState\n      })\n    }\n  }\n\n  const schemaType = function (columnName) {\n    if (columnName) {\n      const dtype = fields.filter((val) => val.name === columnName)[0]\n      return dtype['type']\n    }\n  }\n\n  return (\n    <div className=\"mb-2\" data-testid=\"field-container\">\n      <select\n        className=\"mr-2 my-2 p-2 border rounded\"\n        onChange={handleChange}\n        value={inputState.columnName[0]}\n        name=\"columnName\"\n        data-testid=\"field\"\n      >\n        {getFields(index).map((value, index) => {\n          return (\n            <option value={value.name} key={index}>\n              {value.title || value.name}\n            </option>\n          )\n        })}\n      </select>\n      {schemaType(inputState.columnName[0]) === 'datetime' ||\n      schemaType(inputState.columnName[0]) === 'date' ? (\n        ''\n      ) : (\n        <select\n          className=\"mr-2 my-2 p-2 border rounded\"\n          onChange={handleChange}\n          value={inputState.logicValue[0]}\n          name=\"logicValue\"\n          data-testid=\"logic\"\n        >\n          {Object.keys(logics).map((value, index) => {\n            return (\n              <option value={logics[value]} key={index}>\n                {value}\n              </option>\n            )\n          })}\n        </select>\n      )}\n\n      {schemaType(inputState.columnName[0]) === 'datetime' ||\n      schemaType(inputState.columnName[0]) === 'date' ? (\n        <DateTime\n          columnName={inputState.columnName[0]}\n          setInputStates={setInputStates}\n          index={index}\n          fields={fields}\n          setCopyDisabled={setCopyDisabled}\n        />\n      ) : (\n        <input\n          type=\"text\"\n          className=\"mr-2 my-2 p-2 border rounded\"\n          onChange={handleChange}\n          value={inputState.inputValue}\n          name=\"inputValue\"\n          data-testid=\"field-value\"\n        />\n      )}\n      {index === 0 ? (\n        ''\n      ) : (\n        <>\n          <button\n            className=\"mr-2 border border-black rounded py-1 px-2 dq-btn-remove\"\n            onClick={remove}\n            data-testid=\"remove\"\n          >\n            -\n          </button>\n          <button\n            className=\"border border-black rounded py-1 px-2 dq-btn-add\"\n            onClick={add}\n            data-testid=\"add\"\n          >\n            +\n          </button>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default SelectFilter\n","import React from 'react'\n\nfunction OrderBy({ orderColumnRef, orderByRef, fields }) {\n  return (\n    <div>\n      <select\n        ref={orderColumnRef}\n        className=\"mr-2 my-2 p-2 border rounded\"\n        data-testid=\"data-ord\"\n      >\n        {fields.map((value, index) => {\n          return (\n            <option value={value.name} key={index}>\n              {value.title || value.name}\n            </option>\n          )\n        })}\n      </select>\n      <select className=\"my-2 p-2 border rounded\" ref={orderByRef} data-testid=\"ord-type\">\n        <option value=\"desc\">Descending</option>\n        <option value=\"asc\">Ascending</option>\n      </select>\n    </div>\n  )\n}\n\nexport default OrderBy\n","import React from 'react'\n\nexport default function Error({ error }) {\n  return (\n    <div className=\"text-center font-medium font-serif text-red-600 rounded-md bg-red-200 w-1/2\">\n      <p>{error.toString()}</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useQuery, gql } from '@apollo/client'\nimport Error from '../Error'\nimport spinner from '../../spinner.svg'\nconst Query = require('graphql-query-builder')\n\nfunction TotalRows({ newFilter, dataset, setTotal, total }) {\n  const getTotalRows = new Query(`${dataset}_aggregate`)\n    .filter(newFilter)\n    .find(new Query('aggregate').find('count'))\n\n  const QUERY = gql`\n    query Dataset {\n      ${getTotalRows}\n    }\n  `\n  const { loading, error, data } = useQuery(QUERY)\n\n  if (loading)\n    return <img src={spinner} className=\"spinner\" alt=\"Loading...\" />\n  if (error) {\n    return <Error error={error} />\n  }\n\n  if (data) {\n    setTotal(data[`${dataset}_aggregate`].aggregate.count)\n  }\n\n  return (\n    <div data-testid=\"agg\" className=\"dq-heading-total-rows my-4\">\n      <dl className=\"mt-5 grid grid-cols-1 gap-5 sm:grid-cols-3\">\n        <div className=\"px-4 py-5 bg-white shadow rounded overflow-hidden sm:p-6\">\n          <dt className=\"text-sm font-medium text-gray-500 truncate\">Total entries</dt>\n          <dd className=\"mt-1 text-3xl font-semibold text-gray-900\">{total && total.toLocaleString()}</dd>\n        </div>\n      </dl>\n    </div>\n  )\n}\n\nexport default TotalRows\n","import React from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nconst Query = require('graphql-query-builder')\n\nexport default function CopyButton({ dataset, schema, filter, disabled }) {\n  const datasetQuery = new Query(dataset)\n    .find(schema.fields.map((item) => item.name))\n    .filter(Object.assign(filter, { limit: 100 }))\n\n  //since order _by format is asc and desc but the graphql string\n  //containd this format as 'asc' and 'desc' this will always give error\n  //hence we check theis string and remove the quote\n\n  let queryString = datasetQuery.toString()\n\n  if (queryString.includes('asc')) {\n    queryString = queryString.replace('\"asc\"', 'asc')\n  } else {\n    queryString = queryString.replace('\"desc\"', 'desc')\n  }\n\n  const queryToCopy = `\n    query Dataset {\n      ${queryString}\n    }\n  `\n\n  return (\n    <CopyToClipboard\n      text={queryToCopy}\n      title={disabled ? 'submit to enable button' : ''}\n      disabled={disabled}\n    >\n      <button type=\"button\" className=\"-ml-px relative inline-flex items-center px-4 py-2 rounded-r border border-black hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500\">Copy query</button>\n    </CopyToClipboard>\n  )\n}\n","import React, { useState, useRef } from 'react'\nimport {\n  SelectFilter,\n  OrderBy,\n  TotalRows,\n} from './Components/FilterComponents'\nimport CopyButton from './Components/CopyButton'\n\nfunction Filter({\n  dataset,\n  schema,\n  filter,\n  setFilter,\n  total,\n  setTotal,\n  setOffset,\n  setPage,\n}) {\n  const newFilter = {}\n\n  if (filter && filter.where) Object.assign(newFilter, { where: filter.where })\n\n  const [copyDisabled, setCopyDisabled] = useState(false)\n\n  const [inputStates, setInputStates] = useState([\n    { columnName: [''], logicValue: [], inputValue: [] },\n  ])\n  const orderColumnRef = useRef()\n  const orderByRef = useRef()\n  const [addRules, setAddRules] = useState(false)\n\n  const logics = {\n    '==': '_eq',\n    '<': '_lt',\n    '>': '_gt',\n    '<=': '_lte',\n    '!=': '_neq',\n    '>=': '_gte',\n  }\n\n  const filterTable = function () {\n    setCopyDisabled(false)\n    const whereVariables = {}\n    const filterVariables = {}\n    inputStates.forEach((value, index) => {\n      if (value.inputValue[0]) {\n        // ensure no empty input value\n        whereVariables[value.columnName[0]] = {}\n        value.logicValue.forEach((val, index) => {\n          const logic = value.logicValue[index]\n          const input = value.inputValue[index]\n          whereVariables[value.columnName[0]][logic] = input\n        })\n      } else if(value.inputValue.length === 2 && value.inputValue[1]) {\n        //if the first inputvalue for date[time] is undefined\n        // hence the second index must contain a date[time] value\n        whereVariables[value.columnName[0]] = {}\n        const logic = value.logicValue[1]\n        const input = value.inputValue[1]\n        whereVariables[value.columnName[0]][logic] = input\n\n      }\n    })\n    filterVariables['where'] = whereVariables\n\n    const whereKeys = Object.keys(whereVariables)\n    const length = whereKeys.length\n    const isFilled = length === 1 ? whereKeys[0].length : true\n\n    if (isFilled) {\n      filterVariables['where'] = whereVariables\n    }\n\n    const orderColumn = orderColumnRef.current.value\n    const orderBy = orderByRef.current.value\n    filterVariables['order_by'] = { [orderColumn]: orderBy }\n    filterVariables['limit'] = 100\n    setFilter(filterVariables)\n  }\n\n  const resetFilter = function () {\n    // to ensure default filter ordering\n    // will set the filter back to the \n    // date[time] ordering in desc order\n    let initialFilter = {}\n    const datetime = schema.fields.filter((val) => {\n      return val.type === 'datetime' || val.type === 'date'\n    })\n    if (datetime.length > 0) {\n      initialFilter = { order_by: { [datetime[0].name]: 'desc' } }\n    }\n    // reset the inputstates to one if multiple exist\n    if (inputStates[0].inputValue.length || inputStates.length > 1) {\n      setInputStates([{ columnName: [''], logicValue: [], inputValue: [] }])\n      setOffset(0)\n      setPage(0)\n      setAddRules(false)\n      setFilter(initialFilter)\n      setCopyDisabled(false)\n    }\n  }\n\n  const handleRules = function () {\n    setInputStates((prevState) => {\n      const newState = prevState.slice()\n      newState.push({ columnName: [''], logicValue: ['_eq'], inputValue: [] })\n      return newState\n    })\n    setAddRules(true)\n  }\n\n  return (\n    <div className=\"dq-main-container\">\n      <div className=\"dq-heading\">\n        <div className=\"dq-heading-main\"></div>\n        <TotalRows\n          newFilter={newFilter}\n          dataset={dataset}\n          setTotal={setTotal}\n          total={total}\n        />\n      </div>\n      <form>\n        <div data-testid=\"all-fields\">\n          {schema.fields[0].type.startsWith('date') && (\n            <div className=\"dq-date-picker\">\n              <SelectFilter\n                setInputStates={setInputStates}\n                fields={schema.fields}\n                logics={logics}\n                inputState={inputStates[0]}\n                inputStates={inputStates}\n                index={0}\n                setAddRules={setAddRules}\n                setCopyDisabled={setCopyDisabled}\n              />\n            </div>\n          )}\n\n          <div className=\"dq-body\">\n            {addRules ? (\n              inputStates.slice(1).map((value, index) => {\n                return (\n                  <SelectFilter\n                    setInputStates={setInputStates}\n                    fields={schema.fields}\n                    logics={logics}\n                    inputState={value}\n                    inputStates={inputStates}\n                    index={index + 1}\n                    key={index + 1}\n                    setAddRules={setAddRules}\n                    setCopyDisabled={setCopyDisabled}\n                  />\n                )\n              })\n            ) : (\n              <button\n                className=\"border border-black rounded py-1 px-2 dq-rule-add\"\n                onClick={() => handleRules()}\n                data-testid=\"rules\"\n              >\n                Add a rule\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n      <div className=\"my-4 dq-rule-submit dq-footer\">\n        <OrderBy\n          orderColumnRef={orderColumnRef}\n          orderByRef={orderByRef}\n          fields={schema.fields}\n        />\n        <span className=\"relative z-0 inline-flex shadow-sm rounded-md\">\n          <button\n           type=\"button\"\n            onClick={() => {\n              filterTable()\n            }}\n            className=\"relative inline-flex items-center px-4 py-2 rounded-l border border-black hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500n\"\n          >\n            Submit\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => {\n              resetFilter()\n            }}\n            className=\"-ml-px relative inline-flex items-center px-4 py-2 border border-black hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500\"\n          >\n            Reset\n          </button>\n          <CopyButton\n            dataset={dataset}\n            schema={schema}\n            filter={filter}\n            disabled={copyDisabled}\n          />\n        </span>\n      </div>\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\nimport ReactTable from 'react-table-v6'\nimport 'react-table-v6/react-table.css'\n\nconst Table = ({ data, dataset, schema, total }) => {\n  const pageSize = 100\n\n  const getFields = () => {\n    if (schema && schema.fields) {\n      return schema.fields\n    }\n    const fields = []\n    for (let key in data[0]) {\n      fields.push({\n        name: key,\n      })\n    }\n    return fields\n  }\n\n  data = data.map((rows) => {\n    const row = { ...rows }\n    // If field display attributes exist (these can be custom, eg, in\n    // EDS, we use 'size' attribute which isn't part of tableschema spec)\n    // use it to alter the data for presentation. Eg, \"100.2312313\" => \"100.23\".\n    const fields = getFields()\n    fields.forEach((field) => {\n      const fieldSize =\n        field.size || (field.constraints && field.constraints.size)\n      if (fieldSize && row[field.name] !== null) {\n        const sizeParts = fieldSize.toString().split('.')\n\n        // Format datetime values according to EDS requirements\n        if (field.name.includes('UTC') && field.type === 'datetime') {\n          row[field.name] = row[field.name].replace(\n            /(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}):(\\d{2})(\\+\\d{2}:\\d{2})*/,\n            '$1 $2Z'\n          )\n        } else if (field.name.includes('DK') && field.type === 'datetime') {\n          row[field.name] = row[field.name].replace(\n            /(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}):(\\d{2})/,\n            '$1 $2'\n          )\n        } else if (sizeParts[1]) {\n          sizeParts[1] = parseInt(sizeParts[1])\n          row[field.name] = row[field.name].toLocaleString(undefined, {\n            minimumFractionDigits: sizeParts[1],\n            maximumFractionDigits: sizeParts[1],\n          })\n        } else {\n          sizeParts[0] = parseInt(sizeParts[0])\n          row[field.name] =\n            row[field.name] &&\n            row[field.name].toString().slice(0, sizeParts[0])\n\n          if (field.type === 'integer') {\n            row[field.name] = parseInt(row[field.name])\n          } else if (field.type === 'number') {\n            row[field.name] = parseFloat(row[field.name])\n          }\n        }\n      }\n      row[field.name] = row[field.name] && row[field.name].toLocaleString()\n    })\n\n    return row\n  })\n\n  const columns = getFields().map((field, index) => {\n    return {\n      Header: field.title || field.name,\n      accessor: field.name,\n      Cell: (props) => (\n        <div className={field.type || ''}>\n          <span>{props.value}</span>\n        </div>\n      ),\n      width:\n        index === 0 && (1280 * 0.8333 - 30) / getFields().length < 130\n          ? 130\n          : undefined,\n    }\n  })\n\n  return (\n    <div data-testid=\"reactTable\">\n      <ReactTable\n        data={data}\n        columns={columns}\n        getTheadThProps={() => {\n          return { style: { wordWrap: 'break-word', whiteSpace: 'initial' } }\n        }}\n        showPageJump={false}\n        showPagination={false}\n        defaultPageSize={pageSize}\n        showPageSizeOptions={false}\n        minRows={10}\n      />\n    </div>\n  )\n}\n\nexport default Table\n","import React from 'react'\nimport { useQuery, gql } from '@apollo/client'\nimport Table from './Table'\nimport spinner from './spinner.svg'\nimport Error from './Components/Error'\nconst Query = require('graphql-query-builder')\n\nfunction TableContainer({\n  dataset,\n  schema,\n  filter,\n  total,\n  offset,\n  setOffset,\n  setPage,\n  page,\n}) {\n  const datasetQuery = new Query(dataset)\n    .find(schema.fields.map((item) => item.name))\n    .filter(Object.assign(filter, { limit: 100, offset }))\n\n  //since order _by format is asc and desc but the graphql string\n  //containd this format as 'asc' and 'desc' this will always give error\n  //hence we check theis string and remove the quote\n\n  let queryString = datasetQuery.toString()\n\n  if (queryString.includes('\"asc\"')) {\n    queryString = queryString.replace(/\"asc\"/g, 'asc')\n  } else {\n    queryString = queryString.replace(/\"desc\"/g, 'desc')\n  }\n\n  const QUERY = gql`\n    query Dataset {\n      ${queryString}\n    }\n  `\n\n  const { loading, error, data } = useQuery(QUERY)\n\n  if (loading)\n    return <img src={spinner} className=\"spinner\" alt=\"Loading...\" />\n\n  if (error) {\n    return <Error error={error}/>\n  }\n\n  return (\n    <div>\n      <div className=\"overflow-auto table-container\">\n        <Table\n          data={data[`${dataset}`]}\n          schema={schema}\n          dataset={dataset}\n          total={total}\n          page={page}\n        />\n      </div>\n      <div className=\"data-explorer-pagination\">\n        <button\n          className=\"first-button\"\n          onClick={() => {\n            setPage(0)\n            setOffset(0)\n          }}\n          disabled={page === 0}\n        >\n          First\n        </button>\n        <button\n          className=\"prev-button\"\n          onClick={() => {\n            setPage(page - 1)\n            setOffset((page - 1) * 100)\n          }}\n          disabled={page === 0}\n        >\n          Previous\n        </button>\n        <div className=\"page-number\">{page + 1}</div>\n        <button\n          className=\"next-button\"\n          onClick={() => {\n            setPage(page + 1)\n            setOffset((page + 1) * 100)\n          }}\n          disabled={page >= Math.floor(total / 100)}\n        >\n          Next\n        </button>\n        <button\n          className=\"last-button\"\n          onClick={() => {\n            const totalPages = Math.floor(total / 100)\n            setPage(totalPages)\n            setOffset(totalPages * 100)\n          }}\n          disabled={page >= Math.floor(total / 100)}\n        >\n          Last\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default TableContainer\n","import React, { useState } from 'react'\nimport Download from './Download'\nimport Filter from './Filter'\nimport TableContainer from './TableContainer'\nimport './tailwind/output.css'\n\nfunction App({ dataset, schema, apiUri }) {\n  // Sort by the given list of primary keys\n  let initialFilter = {}\n  if (schema.primary_key) {\n    initialFilter = { order_by: schema.primary_key.map(pk => {\n      return { [pk] : 'desc' }\n    })}\n  } else {\n    // No primary keys exist so order by datetime field if exist\n    const datetime = schema.fields.filter((val) => {\n      return val.type === 'datetime' || val.type === 'date'\n    })\n    if (datetime.length > 0) {\n      initialFilter = { order_by: { [datetime[0].name]: 'desc' } }\n    }\n  }\n\n  const [filter, setFilter] = useState(initialFilter)\n  const [total, setTotal] = useState(0)\n  const [offset, setOffset] = useState(0)\n  const [page, setPage] = useState(0)\n\n  return (\n    <div className=\"max-w-full mx-auto\">\n      <p data-testid=\"hidden-test\"></p>\n      <Download\n        dataset={dataset}\n        schema={schema}\n        filter={filter}\n        apiUri={apiUri}\n      />\n      <Filter\n        dataset={dataset}\n        schema={schema}\n        filter={filter}\n        setFilter={setFilter}\n        total={total}\n        setTotal={setTotal}\n        setOffset={setOffset}\n        setPage={setPage}\n      />\n      <TableContainer\n        dataset={dataset}\n        schema={schema}\n        filter={filter}\n        total={total}\n        offset={offset}\n        setOffset={setOffset}\n        setPage={setPage}\n        page={page}\n        setTotal={setTotal}\n      />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(\n      ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry)\n        getFID(onPerfEntry)\n        getFCP(onPerfEntry)\n        getLCP(onPerfEntry)\n        getTTFB(onPerfEntry)\n      }\n    )\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client'\n\nconst root = document.getElementById('root')\nconst apiUri = root.getAttribute('data-api')\n\nconst client = new ApolloClient({\n  uri: apiUri + 'graphql',\n  cache: new InMemoryCache(),\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App\n        dataset={root.getAttribute('data-dataset')}\n        schema={JSON.parse(root.getAttribute('data-schema'))}\n        apiUri={apiUri}\n      />\n    </ApolloProvider>\n  </React.StrictMode>,\n  root\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}